{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect } from 'react';\n\n/**\n * Ensures that a virtualized list item retains focus after scrolling or clicking on options,\n * preventing unnecessary re-renders and loss of focus. If the current focus is on an interactive\n * element (such as input, textarea, select, button, or contenteditable), the focus is not shifted.\n * @param focused - Boolean indicating if the item should be focused.\n * @returns A ref to be attached to the list item element.\n */\nexport function useFocusVirtualListItem(focused) {\n  var itemRef = useRef(null);\n  useEffect(function () {\n    if (!focused || !itemRef.current) {\n      return;\n    }\n    var activeElement = document.activeElement;\n\n    // Helper function to determine if the element should retain focus\n    var isInteractiveElement = function isInteractiveElement(element) {\n      var tagName = element.tagName;\n      return tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT' || tagName === 'BUTTON' || element.isContentEditable || element.tabIndex >= 0 // Elements with tabindex are considered focusable\n      ;\n    };\n\n    // If the active element is an interactive one, don't shift focus.\n    if (activeElement && isInteractiveElement(activeElement)) {\n      return;\n    }\n\n    // If the currently focused element is not the target item, focus it.\n    if (activeElement !== itemRef.current) {\n      itemRef.current.focus();\n    }\n  }, [focused]);\n  return itemRef;\n}\nexport default useFocusVirtualListItem;","map":{"version":3,"names":["useRef","useEffect","useFocusVirtualListItem","focused","itemRef","current","activeElement","document","isInteractiveElement","element","tagName","isContentEditable","tabIndex","focus"],"sources":["/home/gabriel/Documents/formulario-change/node_modules/rsuite/esm/internals/hooks/useFocusVirtualListItem.js"],"sourcesContent":["'use client';\nimport { useRef, useEffect } from 'react';\n\n/**\n * Ensures that a virtualized list item retains focus after scrolling or clicking on options,\n * preventing unnecessary re-renders and loss of focus. If the current focus is on an interactive\n * element (such as input, textarea, select, button, or contenteditable), the focus is not shifted.\n * @param focused - Boolean indicating if the item should be focused.\n * @returns A ref to be attached to the list item element.\n */\nexport function useFocusVirtualListItem(focused) {\n  var itemRef = useRef(null);\n  useEffect(function () {\n    if (!focused || !itemRef.current) {\n      return;\n    }\n    var activeElement = document.activeElement;\n\n    // Helper function to determine if the element should retain focus\n    var isInteractiveElement = function isInteractiveElement(element) {\n      var tagName = element.tagName;\n      return tagName === 'INPUT' || tagName === 'TEXTAREA' || tagName === 'SELECT' || tagName === 'BUTTON' || element.isContentEditable || element.tabIndex >= 0 // Elements with tabindex are considered focusable\n      ;\n    };\n\n    // If the active element is an interactive one, don't shift focus.\n    if (activeElement && isInteractiveElement(activeElement)) {\n      return;\n    }\n\n    // If the currently focused element is not the target item, focus it.\n    if (activeElement !== itemRef.current) {\n      itemRef.current.focus();\n    }\n  }, [focused]);\n  return itemRef;\n}\nexport default useFocusVirtualListItem;"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuBA,CAACC,OAAO,EAAE;EAC/C,IAAIC,OAAO,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAC1BC,SAAS,CAAC,YAAY;IACpB,IAAI,CAACE,OAAO,IAAI,CAACC,OAAO,CAACC,OAAO,EAAE;MAChC;IACF;IACA,IAAIC,aAAa,GAAGC,QAAQ,CAACD,aAAa;;IAE1C;IACA,IAAIE,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,OAAO,EAAE;MAChE,IAAIC,OAAO,GAAGD,OAAO,CAACC,OAAO;MAC7B,OAAOA,OAAO,KAAK,OAAO,IAAIA,OAAO,KAAK,UAAU,IAAIA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,QAAQ,IAAID,OAAO,CAACE,iBAAiB,IAAIF,OAAO,CAACG,QAAQ,IAAI,CAAC,CAAC;MAAA;IAE7J,CAAC;;IAED;IACA,IAAIN,aAAa,IAAIE,oBAAoB,CAACF,aAAa,CAAC,EAAE;MACxD;IACF;;IAEA;IACA,IAAIA,aAAa,KAAKF,OAAO,CAACC,OAAO,EAAE;MACrCD,OAAO,CAACC,OAAO,CAACQ,KAAK,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC;EACb,OAAOC,OAAO;AAChB;AACA,eAAeF,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}