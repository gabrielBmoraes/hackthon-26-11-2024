{"ast":null,"code":"'use client';\n\nimport { getHours, getMinutes, getSeconds } from \"../../../internals/utils/date/index.js\";\n/**\n * Convert the 24-hour clock to the 12-hour clock\n * @param hours\n */\nfunction getMeridiemHours(hours) {\n  return hours >= 12 ? hours - 12 : hours;\n}\nexport function getClockTime(props) {\n  var format = props.format,\n    date = props.date,\n    showMeridiem = props.showMeridiem;\n  var clockTime = {\n    hours: null,\n    minutes: null,\n    seconds: null,\n    meridiem: null\n  };\n  if (!format) {\n    return clockTime;\n  }\n\n  // If date is provided, extract hours and meridiem\n  if (/(H|h)/.test(format) && date) {\n    var hours = getHours(date);\n    clockTime.hours = showMeridiem ? getMeridiemHours(hours) : hours;\n    clockTime.meridiem = hours >= 12 ? 'PM' : 'AM';\n  }\n  // Extract minutes if 'm' is present in format and date is provided\n  if (/m/.test(format) && date) {\n    clockTime.minutes = getMinutes(date);\n  }\n  // // Extract seconds if 's' is present in format and date is provided\n  if (/s/.test(format) && date) {\n    clockTime.seconds = getSeconds(date);\n  }\n  return clockTime;\n}","map":{"version":3,"names":["getHours","getMinutes","getSeconds","getMeridiemHours","hours","getClockTime","props","format","date","showMeridiem","clockTime","minutes","seconds","meridiem","test"],"sources":["/home/gabriel/Documents/formulario-change/node_modules/rsuite/esm/Calendar/TimeDropdown/utils/getClockTime.js"],"sourcesContent":["'use client';\nimport { getHours, getMinutes, getSeconds } from \"../../../internals/utils/date/index.js\";\n/**\n * Convert the 24-hour clock to the 12-hour clock\n * @param hours\n */\nfunction getMeridiemHours(hours) {\n  return hours >= 12 ? hours - 12 : hours;\n}\nexport function getClockTime(props) {\n  var format = props.format,\n    date = props.date,\n    showMeridiem = props.showMeridiem;\n  var clockTime = {\n    hours: null,\n    minutes: null,\n    seconds: null,\n    meridiem: null\n  };\n  if (!format) {\n    return clockTime;\n  }\n\n  // If date is provided, extract hours and meridiem\n  if (/(H|h)/.test(format) && date) {\n    var hours = getHours(date);\n    clockTime.hours = showMeridiem ? getMeridiemHours(hours) : hours;\n    clockTime.meridiem = hours >= 12 ? 'PM' : 'AM';\n  }\n  // Extract minutes if 'm' is present in format and date is provided\n  if (/m/.test(format) && date) {\n    clockTime.minutes = getMinutes(date);\n  }\n  // // Extract seconds if 's' is present in format and date is provided\n  if (/s/.test(format) && date) {\n    clockTime.seconds = getSeconds(date);\n  }\n  return clockTime;\n}"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,EAAEC,UAAU,EAAEC,UAAU,QAAQ,wCAAwC;AACzF;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC/B,OAAOA,KAAK,IAAI,EAAE,GAAGA,KAAK,GAAG,EAAE,GAAGA,KAAK;AACzC;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAClC,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM;IACvBC,IAAI,GAAGF,KAAK,CAACE,IAAI;IACjBC,YAAY,GAAGH,KAAK,CAACG,YAAY;EACnC,IAAIC,SAAS,GAAG;IACdN,KAAK,EAAE,IAAI;IACXO,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE;EACZ,CAAC;EACD,IAAI,CAACN,MAAM,EAAE;IACX,OAAOG,SAAS;EAClB;;EAEA;EACA,IAAI,OAAO,CAACI,IAAI,CAACP,MAAM,CAAC,IAAIC,IAAI,EAAE;IAChC,IAAIJ,KAAK,GAAGJ,QAAQ,CAACQ,IAAI,CAAC;IAC1BE,SAAS,CAACN,KAAK,GAAGK,YAAY,GAAGN,gBAAgB,CAACC,KAAK,CAAC,GAAGA,KAAK;IAChEM,SAAS,CAACG,QAAQ,GAAGT,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;EAChD;EACA;EACA,IAAI,GAAG,CAACU,IAAI,CAACP,MAAM,CAAC,IAAIC,IAAI,EAAE;IAC5BE,SAAS,CAACC,OAAO,GAAGV,UAAU,CAACO,IAAI,CAAC;EACtC;EACA;EACA,IAAI,GAAG,CAACM,IAAI,CAACP,MAAM,CAAC,IAAIC,IAAI,EAAE;IAC5BE,SAAS,CAACE,OAAO,GAAGV,UAAU,CAACM,IAAI,CAAC;EACtC;EACA,OAAOE,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}