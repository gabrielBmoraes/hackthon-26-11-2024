{"ast":null,"code":"'use client';\n\nimport { SchemaModel, ObjectType } from 'schema-typed';\nimport { useRef, useCallback } from 'react';\n/**\n * Convert a flat schema object to a nested schema object\n *\n * @example\n *\n * ```js\n * const schema = {\n *  'address.city': StringType().isRequired('City is required'),\n *  'address.street': StringType().isRequired('Street is required')\n * };\n *\n * const result = unflattenSchemaObject(schema);\n *\n * // result\n * {\n *    address: ObjectType().shape({\n *      city: StringType().isRequired('City is required'),\n *      street: StringType().isRequired('Street is required')\n *    })\n * }\n * ```\n */\nfunction unflattenSchemaObject(schema) {\n  var result = {};\n  var $type = Symbol('schema-type');\n  Object.keys(schema).forEach(function (key) {\n    if (key.includes('.')) {\n      var keys = key.split('.');\n      var lastKey = keys.pop() || '';\n      var current = result;\n      keys.forEach(function (subKey) {\n        var _ref;\n        current[subKey] = current[subKey] || (_ref = {}, _ref[$type] = 'object-type', _ref);\n        current = current[subKey];\n      });\n      current[lastKey] = schema[key];\n    } else {\n      result[key] = schema[key];\n    }\n  });\n  function convertToShape(obj) {\n    Object.keys(obj).forEach(function (key) {\n      var _obj$key;\n      if (((_obj$key = obj[key]) === null || _obj$key === void 0 ? void 0 : _obj$key[$type]) === 'object-type') {\n        delete obj[key][$type];\n        obj[key] = ObjectType().shape(convertToShape(obj[key]));\n      }\n    });\n    return obj;\n  }\n  return convertToShape(result);\n}\nfunction useSchemaModel(formModel, nestedField) {\n  var subRulesRef = useRef([]);\n  var pushFieldRule = useCallback(function (name, fieldRule) {\n    subRulesRef.current.push({\n      name: name,\n      fieldRule: fieldRule\n    });\n  }, []);\n  var removeFieldRule = useCallback(function (name) {\n    var index = subRulesRef.current.findIndex(function (v) {\n      return v.name === name;\n    });\n    subRulesRef.current.splice(index, 1);\n  }, []);\n  var getCombinedModel = useCallback(function () {\n    var realSubRules = subRulesRef.current.filter(function (v) {\n      return Boolean(v.fieldRule.current);\n    });\n\n    // If there is no sub rule, return the original form model\n    if (realSubRules.length === 0) {\n      return formModel;\n    }\n    var subRuleObject = realSubRules.map(function (_ref2) {\n      var _ref3;\n      var name = _ref2.name,\n        fieldRule = _ref2.fieldRule;\n      return _ref3 = {}, _ref3[name] = fieldRule.current, _ref3;\n    }).reduce(function (a, b) {\n      return Object.assign(a, b);\n    }, {});\n    return SchemaModel.combine(formModel, SchemaModel(nestedField ? unflattenSchemaObject(subRuleObject) : subRuleObject));\n  }, [formModel, nestedField]);\n  return {\n    getCombinedModel: getCombinedModel,\n    pushFieldRule: pushFieldRule,\n    removeFieldRule: removeFieldRule\n  };\n}\nexport default useSchemaModel;","map":{"version":3,"names":["SchemaModel","ObjectType","useRef","useCallback","unflattenSchemaObject","schema","result","$type","Symbol","Object","keys","forEach","key","includes","split","lastKey","pop","current","subKey","_ref","convertToShape","obj","_obj$key","shape","useSchemaModel","formModel","nestedField","subRulesRef","pushFieldRule","name","fieldRule","push","removeFieldRule","index","findIndex","v","splice","getCombinedModel","realSubRules","filter","Boolean","length","subRuleObject","map","_ref2","_ref3","reduce","a","b","assign","combine"],"sources":["/home/gabriel/Documents/formulario-change/node_modules/rsuite/esm/Form/hooks/useSchemaModel.js"],"sourcesContent":["'use client';\nimport { SchemaModel, ObjectType } from 'schema-typed';\nimport { useRef, useCallback } from 'react';\n/**\n * Convert a flat schema object to a nested schema object\n *\n * @example\n *\n * ```js\n * const schema = {\n *  'address.city': StringType().isRequired('City is required'),\n *  'address.street': StringType().isRequired('Street is required')\n * };\n *\n * const result = unflattenSchemaObject(schema);\n *\n * // result\n * {\n *    address: ObjectType().shape({\n *      city: StringType().isRequired('City is required'),\n *      street: StringType().isRequired('Street is required')\n *    })\n * }\n * ```\n */\nfunction unflattenSchemaObject(schema) {\n  var result = {};\n  var $type = Symbol('schema-type');\n  Object.keys(schema).forEach(function (key) {\n    if (key.includes('.')) {\n      var keys = key.split('.');\n      var lastKey = keys.pop() || '';\n      var current = result;\n      keys.forEach(function (subKey) {\n        var _ref;\n        current[subKey] = current[subKey] || (_ref = {}, _ref[$type] = 'object-type', _ref);\n        current = current[subKey];\n      });\n      current[lastKey] = schema[key];\n    } else {\n      result[key] = schema[key];\n    }\n  });\n  function convertToShape(obj) {\n    Object.keys(obj).forEach(function (key) {\n      var _obj$key;\n      if (((_obj$key = obj[key]) === null || _obj$key === void 0 ? void 0 : _obj$key[$type]) === 'object-type') {\n        delete obj[key][$type];\n        obj[key] = ObjectType().shape(convertToShape(obj[key]));\n      }\n    });\n    return obj;\n  }\n  return convertToShape(result);\n}\nfunction useSchemaModel(formModel, nestedField) {\n  var subRulesRef = useRef([]);\n  var pushFieldRule = useCallback(function (name, fieldRule) {\n    subRulesRef.current.push({\n      name: name,\n      fieldRule: fieldRule\n    });\n  }, []);\n  var removeFieldRule = useCallback(function (name) {\n    var index = subRulesRef.current.findIndex(function (v) {\n      return v.name === name;\n    });\n    subRulesRef.current.splice(index, 1);\n  }, []);\n  var getCombinedModel = useCallback(function () {\n    var realSubRules = subRulesRef.current.filter(function (v) {\n      return Boolean(v.fieldRule.current);\n    });\n\n    // If there is no sub rule, return the original form model\n    if (realSubRules.length === 0) {\n      return formModel;\n    }\n    var subRuleObject = realSubRules.map(function (_ref2) {\n      var _ref3;\n      var name = _ref2.name,\n        fieldRule = _ref2.fieldRule;\n      return _ref3 = {}, _ref3[name] = fieldRule.current, _ref3;\n    }).reduce(function (a, b) {\n      return Object.assign(a, b);\n    }, {});\n    return SchemaModel.combine(formModel, SchemaModel(nestedField ? unflattenSchemaObject(subRuleObject) : subRuleObject));\n  }, [formModel, nestedField]);\n  return {\n    getCombinedModel: getCombinedModel,\n    pushFieldRule: pushFieldRule,\n    removeFieldRule: removeFieldRule\n  };\n}\nexport default useSchemaModel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}